CONTROL DE VERSIONES
El control de versiones registra las diferentes versiones del archivo, el historial del código.
Cada registro de estos cambios se denomina commit y se hace git.commit.
Commit funciona como un “paquete” de cambios realizados, que se pueden ir agregando al stage
(estado intermedio con cambios) mediante el comando git add.
El espacio intermedio entre haber hecho commit (checkpoint) y no hacer nada se lo invoca como
git.add en donde se le agregan los cambios o como historial de cambios. Si haces commit sin hacer
add no funciona.
¿Qué son los repositorios? Es un almacenamiento al que se accede de manera en línea.
¿Qué es internet? Es una conexión física y cableada entre máquinas.
¿Qué es la nube? Todo lo que puedo acceder a través de internet.
Luego de commit, con git.push (subo cambios) empujo todos los cambios a la nube de GitHub y para
volver para atrás se hace git.pull, en donde descargo todos (bajo cambios).
¿Cómo clonar un repositorio? Haciendo git clone + url del enlace
Otra opción es ir a GitHub Desktop -> ir a file -> ir a clone repository -> copiar el url de la web.
El clone es equivalente a hacer un pull, con la diferencia que pull es solo lo nuevo y clone es todo.
Permite rastrear datos. Estado o cambio que se realiza en un archivo. (Github)
1) editar {archivo}
2) git add {archivo} → agrega nuevas líneas.
3) git commit {archivo} → guarda el proceso para la próxima vez que abras el archivo.
4) git push → empujar el archivo a la nube. subir cambios.
5) git pull → descarga cambios más recientes del archivo. bajar cambios.
ej)
memal@LAPTOP-OR1EBNMU MINGW64 ~/OneDrive/Desktop/UCEMA/F_informatica/github
practice
$ git add *
memal@LAPTOP-OR1EBNMU MINGW64 ~/OneDrive/Desktop/UCEMA/F_informatica/github
practice
$ git commit -m "agregue archivo"
memal@LAPTOP-OR1EBNMU MINGW64 ~/OneDrive/Desktop/UCEMA/F_informatica/github
practice
$ git push